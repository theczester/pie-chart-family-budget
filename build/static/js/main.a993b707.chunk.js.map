{"version":3,"sources":["components/FamilyEarnings.js","components/CurrentStep.js","chartTemplate.js","components/Expenses.js","components/Footer.js","components/PieChart.js","App.js","serviceWorker.js","index.js"],"names":["FamilyEarnings","className","action","method","type","placeholder","name","step","min","required","CurrentStep","isHidden","URLSearchParams","useLocation","search","get","path","pathname","isMobile","useMediaQuery","query","style","color","size","chartTemplate","chartData","labels","datasets","data","backgroundColor","borderWidth","options","responsive","title","text","display","fontSize","padding","animation","animateScale","maintainAspectRatio","legend","fontFamily","tooltips","callbacks","tooltipItem","label","expense","afterLabel","dataset","percent","Math","round","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","Expenses","total","chart","useState","invalidExpenses","setInvalidExpenses","currentTotal","setCurrentTotal","handleChange","arr","document","getElementsByClassName","tot","i","length","parseInt","value","map","slice","charAt","toLowerCase","max","onChange","disabled","Footer","PieChart","savings","copySuccess","setCopySuccess","onClick","isIOS","el","getElementById","oldContentEditable","contentEditable","oldReadOnly","readOnly","range","createRange","selectNodeContents","s","window","getSelection","removeAllRanges","addRange","setSelectionRange","execCommand","setTimeout","activeElement","blur","copyToClipboardiOS","select","id","location","href","App","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a993b707.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FamilyEarnings = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1 className=\"step\">1.</h1>\r\n        <h1>Wpisz miesięczne zarobki twojej rodziny</h1>\r\n      </div>\r\n      <form action=\"/wydatki\" method=\"get\" className=\"earnings-form\">\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"np. 5000\"\r\n          className=\"earnings-input\"\r\n          name=\"total\"\r\n          step=\"100\"\r\n          min=\"1000\"\r\n          required\r\n        />\r\n        <button className=\"submit-btn res-btn\" type=\"submit\">\r\n          Dalej\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FamilyEarnings;\r\n","import React from \"react\";\r\nimport { ArrowRight } from \"react-feather\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst CurrentStep = () => {\r\n  let query = useQuery();\r\n  const isHidden = query.get(\"hideStep\");\r\n  const path = useLocation().pathname;\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-device-width: 850px)\",\r\n  });\r\n  if (!isHidden) {\r\n    return (\r\n      <div className=\"currentStep-container\">\r\n        <span style={{ color: path === \"/\" ? \"black\" : \"lightgray\" }}>\r\n          1. Zarobki\r\n        </span>\r\n        <ArrowRight size={isMobile ? \"30px\" : \"60px\"} />\r\n        <span style={{ color: path === \"/wydatki\" ? \"black\" : \"lightgray\" }}>\r\n          2. Wydatki\r\n        </span>\r\n        <ArrowRight size={isMobile ? \"30px\" : \"60px\"} />\r\n        <span style={{ color: path === \"/wykres\" ? \"black\" : \"lightgray\" }}>\r\n          3. Wykres\r\n        </span>\r\n      </div>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nexport default CurrentStep;\r\n","const chartTemplate = (chartData) => {\r\n  return {\r\n    labels: [\r\n      \"Restauracje i hotele\",\r\n      \"Edukacja\",\r\n      \"Rekreacja i kultura\",\r\n      \"Łączność\",\r\n      \"Transport\",\r\n      \"Zdrowie\",\r\n      \"Pozostałe towary i usługi\",\r\n      \"Pozostałe wydatki np. kieszonkowe\",\r\n      \"Żywność\",\r\n      \"Odzież i obuwie\",\r\n      \"Użytkowanie mieszkania i energia\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: chartData,\r\n        backgroundColor: [\r\n          \"#52D726\",\r\n          \"#DDDDDD\",\r\n          \"#FF7300\",\r\n          \"#FF0000\",\r\n          \"#007ED6\",\r\n          \"#7CDDDD\",\r\n          \"#C608D1\",\r\n          \"#E6F69D\",\r\n          \"#FFEC00\",\r\n          \"#FF2E7E\",\r\n          \"#FFAB05\",\r\n        ],\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n    options: {\r\n      responsive: true,\r\n      title: {\r\n        text: \"Budżet domowy\",\r\n        display: true,\r\n        fontSize: 28,\r\n        padding: 20,\r\n      },\r\n      animation: { animateScale: true },\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        labels: {\r\n          fontSize: 16,\r\n          fontFamily: \"'Roboto', sans-serif\",\r\n        },\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          title: function (tooltipItem, data) {\r\n            return data[\"labels\"][tooltipItem[0][\"index\"]];\r\n          },\r\n          label: function (tooltipItem, data) {\r\n            const expense = data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]];\r\n            return `${expense}zł`;\r\n          },\r\n          afterLabel: function (tooltipItem, data) {\r\n            const dataset = data[\"datasets\"][0];\r\n            const percent = Math.round(\r\n              (dataset[\"data\"][tooltipItem[\"index\"]] /\r\n                dataset[\"_meta\"][0][\"total\"]) *\r\n                100\r\n            );\r\n            return `(${percent}%)`;\r\n          },\r\n        },\r\n        backgroundColor: \"#FFF\",\r\n        titleFontSize: 16,\r\n        titleFontColor: \"#007bff\",\r\n        bodyFontColor: \"#000\",\r\n        bodyFontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default chartTemplate;\r\n","import React, { useState } from \"react\";\r\nimport chartTemplate from \"../chartTemplate\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst Expenses = () => {\r\n  let query = useQuery();\r\n  const total = query.get(\"total\");\r\n\r\n  const chart = chartTemplate([]);\r\n\r\n  const [invalidExpenses, setInvalidExpenses] = useState(true);\r\n  const [currentTotal, setCurrentTotal] = useState(0);\r\n\r\n  const handleChange = () => {\r\n    const arr = document.getElementsByClassName(\"expenses-input\");\r\n    let tot = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (parseInt(arr[i].value)) tot += parseInt(arr[i].value);\r\n    }\r\n\r\n    if (tot == total) {\r\n      setInvalidExpenses(false);\r\n    } else {\r\n      setCurrentTotal(tot);\r\n      setInvalidExpenses(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container smaller-margin\">\r\n      <div className=\"header\">\r\n        <h1 className=\"step\">2.</h1>\r\n        <h1>Wpisz miesięczne wydatki twojej rodziny</h1>\r\n      </div>\r\n      <form className=\"expenses-form\" action=\"/wykres\" method=\"get\">\r\n        {chart.labels.map((label) => (\r\n          <>\r\n            <h2 className=\"expenses-input-header\">{label}</h2>\r\n            <input\r\n              type=\"number\"\r\n              name={`${label.slice(0, 2)}${label.charAt(\r\n                label.length - 1\r\n              )}`.toLowerCase()}\r\n              required\r\n              step=\"10\"\r\n              min=\"0\"\r\n              max={total}\r\n              className=\"expenses-input\"\r\n              onChange={() => handleChange()}\r\n            />\r\n          </>\r\n        ))}\r\n        <h2 className=\"expenses-input-header\">Oszczędności</h2>\r\n        <input\r\n          type=\"number\"\r\n          name=\"osz\"\r\n          step=\"10\"\r\n          max={total}\r\n          className=\"expenses-input\"\r\n          onChange={() => handleChange()}\r\n        />\r\n        {invalidExpenses && (\r\n          <p className=\"invalidExpense-msg\">\r\n            Suma wszystkich wydatków i oszczędności musi być równa sumie\r\n            dochodów czyli {total} natomiast obecna suma wynosi {currentTotal}!\r\n          </p>\r\n        )}\r\n        <button\r\n          className=\"submit-btn expenses-btn res-btn\"\r\n          type=\"submit\"\r\n          disabled={invalidExpenses}\r\n        >\r\n          Dalej\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <small className=\"footer\">\r\n      Strona stworzona przez &copy; Paweł Fąfara 2020\r\n    </small>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Copy } from \"react-feather\";\r\nimport chartTemplate from \"../chartTemplate\";\r\nimport { isIOS } from \"react-device-detect\";\r\nimport { CheckCircle } from \"react-feather\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nconst PieChart = () => {\r\n  let query = useQuery();\r\n  const savings = query.get(\"osz\");\r\n  const isHidden = query.get(\"hideStep\");\r\n  const data = chartTemplate([]).labels.map((label) =>\r\n    query.get(\r\n      `${label.slice(0, 2)}${label.charAt(label.length - 1)}`.toLowerCase()\r\n    )\r\n  );\r\n  const chartData = chartTemplate(data);\r\n\r\n  const [copySuccess, setCopySuccess] = useState(false);\r\n\r\n  const copyToClipboardiOS = () => {\r\n    const el = document.getElementById(\"textToCopy\");\r\n    const oldContentEditable = el.contentEditable,\r\n      oldReadOnly = el.readOnly,\r\n      range = document.createRange();\r\n\r\n    el.contentEditable = true;\r\n    el.readOnly = false;\r\n    range.selectNodeContents(el);\r\n\r\n    const s = window.getSelection();\r\n    s.removeAllRanges();\r\n    s.addRange(range);\r\n\r\n    el.setSelectionRange(0, 999999);\r\n\r\n    el.contentEditable = oldContentEditable;\r\n    el.readOnly = oldReadOnly;\r\n\r\n    document.execCommand(\"copy\");\r\n    setTimeout(() => {\r\n      document.activeElement.blur();\r\n    }, 50);\r\n    setCopySuccess(true);\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    const el = document.getElementById(\"textToCopy\");\r\n    el.select();\r\n    document.execCommand(\"copy\");\r\n    setTimeout(() => {\r\n      document.activeElement.blur();\r\n    }, 50);\r\n    setCopySuccess(true);\r\n  };\r\n\r\n  if (!isHidden) {\r\n    return (\r\n      <div className=\"chartPage-container\">\r\n        <div className=\"header add-margin\">\r\n          <h1 className=\"step\">3.</h1>\r\n          <h1>\r\n            Skopiuj link do strony z gotowym wykresem {`(na dole strony)`}\r\n          </h1>\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          <Pie data={chartData} options={chartData.options} />\r\n        </div>\r\n        <h1 className=\"savings\">Oszczędności: {savings}zł</h1>\r\n        <button\r\n          onClick={() => (isIOS ? copyToClipboardiOS() : copyToClipboard())}\r\n          className=\"copy-btn submit-btn\"\r\n        >\r\n          <span>Skopiuj Link</span> <Copy size=\"32px\" />\r\n        </button>\r\n        {copySuccess && (\r\n          <p className=\"copy-success\">\r\n            Link skopiowany do schowka! <CheckCircle />\r\n          </p>\r\n        )}\r\n        <textarea\r\n          id=\"textToCopy\"\r\n          value={`${window.location.href}&hideStep=true`}\r\n          className=\"hidden-textarea\"\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"chartPage-container\">\r\n        <div className=\"chart-container\">\r\n          <Pie data={chartData} options={chartData.options} />\r\n        </div>\r\n        <h1 className=\"savings\">Oszczędności: {savings}zł</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport FamilyEarnings from \"./components/FamilyEarnings\";\r\nimport CurrentStep from \"./components/CurrentStep\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport Footer from \"./components/Footer\";\r\nimport PieChart from \"./components/PieChart\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <CurrentStep />\r\n      <Route exact path=\"/\" component={FamilyEarnings} />\r\n      <Route path=\"/wydatki\" component={Expenses} />\r\n      <Route path=\"/wykres\" component={PieChart} />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}